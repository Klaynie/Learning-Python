import math
from math import sqrt

try:
    # see if Swampy is installed as a package
    from swampy.TurtleWorld import *
except ImportError:
    # otherwise see if the modules are on the PYTHONPATH
    from TurtleWorld import *
    from mypolygon import *
    
def draw_a(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b)
    rt(t)
    fd(t,h)
    pu(t)
    rt(t,180)
    fd(t,h/2)
    pd(t)
    lt(t)
    fd(t,b)
    pu(t)
    rt(t,180)
    fd(t,b)
    rt(t)
    fd(t,h/2)
    lt(t)

def draw_b(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b/3+b/6)
    lt(t,180)
    arc(t,b/3,-90)
    lt(t,180)
    fd(t,h/2-2*b/3)
    lt(t,180)
    arc(t,b/3,-90)
    lt(t,180)
    fd(t,b/3+b/6)
    pu(t)
    lt(t,180)
    fd(t,b/3+b/6)
    pd(t)
    fd(t,b/3-b/6)
    lt(t,180)
    arc(t,b/3,-90)
    lt(t,180)
    fd(t,h/2-2*b/3)
    lt(t,180)
    arc(t,b/3,-90)
    lt(t,180)
    fd(t,2*b/3)
    pu(t)
    lt(t,180)
    fd(t,b)
    
def draw_c(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b)
    pu(t)
    rt(t)
    fd(t,h)
    rt(t)
    fd(t,b)
    rt(t,180)
    pd(t)
    fd(t,b)
    pu(t)

def draw_d(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b-h/3)
    lt(t,180)
    arc(t,h/3,-90)
    lt(t,180)
    fd(t,h/3)
    lt(t,180)
    arc(t,h/3,-90)
    lt(t,180)
    fd(t,b-h/3)
    pu(t)
    lt(t,180)
    fd(t,b)
    
def draw_e(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b)
    rt(t)
    pu(t)
    fd(t,h)
    rt(t,180)
    fd(t,h/2)
    pd(t)
    lt(t)
    fd(t,b)
    pu(t)
    rt(t,180)
    fd(t,b)
    rt(t)
    fd(t,h/2)
    rt(t)
    pd(t)
    fd(t,b)
    pu(t)
    rt(t,180)
    fd(t,b)
    
def draw_f(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b)
    rt(t)
    pu(t)
    fd(t,h)
    rt(t,180)
    fd(t,h/2)
    lt(t)
    pd(t)
    fd(t,b)
    pu(t)
    rt(t,180)
    fd(t,b)
    rt(t)
    fd(t,h/2)
    lt(t)
    
def draw_g(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b)
    pu(t)
    rt(t)
    fd(t,h/2)
    rt(t)
    pd(t)
    fd(t,b/2)
    pu(t)
    rt(t,180)
    fd(t,b/2)
    rt(t)
    pd(t)
    fd(t,h/2)
    rt(t)
    fd(t,b)
    pu(t)
    rt(t,180)
    fd(t,b)
    
def draw_h(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    pu(t)
    rt(t)
    fd(t,b)
    pd(t)
    rt(t)
    fd(t,h)
    pu(t)
    rt(t,180)
    fd(t,h/2)
    pd(t)
    lt(t)
    fd(t,b)
    pu(t)
    rt(t,180)
    fd(t,b)
    rt(t)
    fd(t,h/2)
    pu(t)
    lt(t)

def draw_i(t,h):
    b = h/((1+math.sqrt(5))/2)
    pu(t)
    lt(t)
    fd(t,h)
    rt(t)
    fd(t,b/2)
    rt(t)
    pd(t)
    fd(t,h)
    pu(t)
    lt(t)
    fd(t,b/2)
    
def draw_j(t,h):
    b = h/((1+math.sqrt(5))/2)
    pu(t)
    lt(t)
    fd(t,h)
    rt(t)
    pd(t)
    fd(t,b)
    rt(t)
    fd(t,h)
    rt(t)
    fd(t,b)
    rt(t,180)
    pd(t)
    fd(t,b)
    pu(t)
    
def draw_k(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt(b**2+(h/2)**2)
    angle = math.degrees(math.atan(b/(h/2)))
    lt(t)
    pd(t)
    fd(t,h)
    rt(t,180)
    pu(t)
    fd(t,h/2)
    pd(t)
    lt(t,angle)
    fd(t,diag)
    pu(t)
    lt(t,180-angle)
    fd(t,h)
    lt(t,180-angle)
    pd(t)
    fd(t,diag)
    pu(t)
    lt(t,2*angle)
    fd(t,diag)
    lt(t,90-angle)
    
def draw_l(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    pu(t)
    lt(t,180)
    fd(t,h)
    lt(t)
    pd(t)
    fd(t,b)
    pu(t)

def draw_m(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt((b/2)**2+(h/2)**2)
    angle = math.degrees(math.atan((b/2)/(h/2)))
    lt(t)
    pd(t)
    fd(t,h)
    rt(t,180-angle)
    fd(t,diag)
    lt(t,180-2*angle)
    fd(t,diag)
    rt(t,180-angle)
    fd(t,h)
    lt(t)
    pu(t)

def draw_n(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt(b**2+h**2)
    angle = math.degrees(math.atan(b/h))
    lt(t)
    pd(t)
    fd(t,h)
    rt(t,180-angle)
    fd(t,diag)
    lt(t,180-angle)
    fd(t,h)
    pu(t)
    rt(t,180)
    fd(t,h)
    lt(t)
    pu(t)

def draw_o(t,h):
    b = h/((1+math.sqrt(5))/2)
    pu(t)
    fd(t,h/4)
    pd(t)
    arc(t,h/4,-90)
    lt(t,180)
    fd(t,h/2)
    lt(t,180)
    arc(t,h/4,-90)
    lt(t,180)
    fd(t,b-h/2)
    lt(t,180)
    arc(t,h/4,-90)
    lt(t,180)
    fd(t,h/2)
    lt(t,180)
    arc(t,h/4,-90)
    lt(t,180)
    fd(t,b-h/2)
    lt(t,180)
    pu(t)
    fd(t,b-h/4)
    
def draw_p(t,h):
    b = h/((1+math.sqrt(5))/2)
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b-h/4)
    lt(t,180)
    arc(t,h/4,-90)
    arc(t,h/4,-90)
    lt(t,180)
    fd(t,b-h/4)
    pu(t)
    lt(t)
    fd(t,h/2)
    lt(t)
    fd(t,b)

def draw_q(t,h):
    b = h/((1+math.sqrt(5))/2)
    pu(t)
    fd(t,h/3)
    pd(t)
    arc(t,h/3,-90)
    lt(t,180)
    fd(t,h/3)
    lt(t,180)
    arc(t,h/3,-90)
    lt(t,180)
    fd(t,b-2*h/3)
    lt(t,180)
    arc(t,h/3,-90)
    lt(t,180)
    fd(t,h/3)
    lt(t,180)
    arc(t,h/3,-90)
    pu(t)
    lt(t)
    fd(t,h/3)
    rt(t,135)
    fd(t,h/6)
    pd(t)
    fd(t,h/3)
    lt(t,45)
    pu(t)

def draw_r(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt((h/4)**2+(h/2)**2)
    angle = math.degrees(math.atan((h/4)/(h/2)))
    lt(t)
    pd(t)
    fd(t,h)
    rt(t)
    fd(t,b-h/4)
    lt(t,180)
    arc(t,h/4,-90)
    arc(t,h/4,-90)
    lt(t,180)
    fd(t,b-h/4)
    pu(t)
    lt(t,180)
    fd(t,b-h/4)
    rt(t,90-angle)
    pd(t)
    fd(t,diag)
    pu(t)
    lt(t,90-angle)
    
def draw_s(t,h):
    b = h/((1+math.sqrt(5))/2)
    pd(t)
    fd(t,b-h/4)
    arc(t,h/4,180)
    fd(t,b-h/2)
    lt(t,180)
    arc(t,h/4,-180)
    lt(t,180)
    fd(t,b-h/4)
    pu(t)
    rt(t)
    fd(t,h)
    lt(t)

def draw_t(t,h):
    b = h/((1+math.sqrt(5))/2)
    pu(t)
    lt(t)
    fd(t,h)
    rt(t)
    pd(t)
    fd(t,b)
    pu(t)
    lt(t,180)
    fd(t,b/2)
    lt(t)
    pd(t)
    fd(t,h)
    pu(t)
    lt(t)
    fd(t,b/2)
    
def draw_u(t,h):
    b = h/((1+math.sqrt(5))/2)
    pu(t)
    fd(t,h/4)
    pd(t)
    arc(t,h/4,-90)
    lt(t,180)
    fd(t,3*h/4)
    pu(t)
    rt(t)
    fd(t,b)
    rt(t)
    pd(t)
    fd(t,3*h/4)
    lt(t,180)
    arc(t,h/4,-90)
    lt(t,180)
    fd(t,b-h/2)
    lt(t,180)
    pu(t)
    fd(t,b-h/4)

def draw_v(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt((b/2)**2+h**2)
    angle = math.degrees(math.atan((b/2)/h))
    pu(t)
    lt(t)
    fd(t,h)
    rt(t,180-angle)
    pd(t)
    fd(t,diag)
    lt(t,180-2*angle)
    fd(t,diag)
    pu(t)
    rt(t,180-angle)
    fd(t,h)
    lt(t)
    
def draw_w(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt((b/2)**2+(h/2)**2)
    angle = math.degrees(math.atan((b/2)/(h/2)))
    lt(t)
    pd(t)
    fd(t,h)
    pu(t)
    lt(t,180)
    fd(t,h)
    pd(t)
    lt(t,180-angle)
    fd(t,diag)
    rt(t,180-2*angle)
    fd(t,diag)
    lt(t,180-angle)
    fd(t,h)
    lt(t,180)
    pu(t)
    fd(t,h)
    lt(t)

def draw_x(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt(b**2+h**2)
    angle = math.degrees(math.atan(b/h))
    lt(t,90-angle)
    pd(t)
    fd(t,diag)
    pu(t)
    lt(t,90+angle)
    fd(t,b)
    lt(t,90+angle)
    pd(t)
    fd(t,diag)
    pu(t)
    lt(t,90-angle)

def draw_y(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt(b**2+h**2)
    angle = math.degrees(math.atan(b/h))
    lt(t,90-angle)
    pu(t)
    fd(t,diag/2)
    pd(t)
    fd(t,diag/2)
    pu(t)
    lt(t,90+angle)
    fd(t,b)
    lt(t,90+angle)
    pd(t)
    fd(t,diag/2)
    rt(t,angle)
    fd(t,h/2)
    pu(t)
    lt(t,90)
    fd(t,b/2)
    
def draw_z(t,h):
    b = h/((1+math.sqrt(5))/2)
    diag = math.sqrt(b**2+h**2)
    angle = math.degrees(math.atan(b/h))
    lt(t,90-angle)
    pd(t)
    fd(t,diag)
    lt(t,90+angle)
    fd(t,b)
    pu(t)
    lt(t)
    fd(t,h)
    lt(t)
    pd(t)
    fd(t,b)
    pu(t)

draw_h(bob, 40)
fd(bob,5)
draw_e(bob, 40)
fd(bob,5)
draw_l(bob, 40)
fd(bob,5)
draw_l(bob, 40)
fd(bob,5)
draw_o(bob, 40)
fd(bob,25)
draw_w(bob, 40)
fd(bob,5)
draw_o(bob, 40)
fd(bob,5)
draw_r(bob, 40)
fd(bob,5)
draw_l(bob, 40)
fd(bob,5)
draw_d(bob, 40)

wait_for_user()